Objective:
Create a disaster image and text classification application with a web interface and database, allowing users to upload images or tweets manually for classification, and access live classification via a scraper.

Steps Taken:
Text Classification:

Used a disaster tweet dataset combined with a ham text dataset, applying a TF-IDF vectorizer.
Trained various models: Logistic Regression, Random Forest, XGBoost, SVM, SimpleRNN, and LSTM.
Observed improved accuracy and precision by combining the datasets compared to using disaster tweets alone, with Logistic Regression performing the best.
Image Classification:

Used a disaster image dataset from Kaggle.
Grouped fine image classes into broader categories, enhancing classification performance.
Scraper Development:

Developed a scraper using Selenium to input a hashtag and retrieve the top 50 posts from Twitter for classification.
Integration & Application Development:

Used Flask to build the application, applying OOP principles for reusable code.
Created three tabs:
Image Classification
Text Classification
Live Scraper (classifies recent Twitter posts based on hashtags).